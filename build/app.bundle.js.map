{"version":3,"sources":["webpack:///webpack/bootstrap b1b9a846abcc9db8c430","webpack:///./js/main.js","webpack:///./js/pothole-service.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACrCA;;KAAY;;;;AAEZ,SAAQ,OAAR,GACE,IADF,CACO,oBAAY;;AAEjB,cAAW,QAAQ,sBAAR,CAA+B,QAA/B,CAAX,CAFiB;;AAIjB,WAAQ,GAAR,CAAY,QAAZ,EAJiB;;+BAM8B,QAAQ,gBAAR,CAAyB,QAAzB,EAN9B;;OAMZ,oCANY;OAML,sCANK;OAMG,wCANH;OAMY,sDANZ;;;AAQjB,YAAS,cAAT,CAAwB,gBAAxB,EAA0C,SAA1C,GAAyD,4BAAuB,kCAAhF,CARiB;;AAUf,OAAI,OAAO,EAAP,CAVW;;AAYf,YAAS,OAAT,CAAiB;YAAW,qBAAmB,QAAQ,aAAR,iBAAiC,QAAQ,cAAR,UAA2B,QAAQ,GAAR,iBAAuB,QAAQ,MAAR,iBAA0B,QAAQ,kCAAR,iBAAsD,QAAQ,kBAAR,eAAtL;IAAX,CAAjB,CAZe;AAaf,YAAS,cAAT,CAAwB,UAAxB,EAAoC,SAApC,GAAgD,IAAhD,CAbe;EAAZ,CADP,CAiBG,KAjBH,CAiBS;UAAK,QAAQ,GAAR,CAAY,CAAZ;EAAL,CAjBT,C;;;;;;;;;;;;ACFA,KAAI,MAAM,wDAAN;;AAEG,KAAI,4BAAU,SAAV,OAAU;SAAM,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;;AAE3D,SAAM,GAAN,EAAW,IAAX,CAAgB,UAAS,QAAT,EAAmB;AACjC,WAAO,SAAS,IAAT,EAAP,CADiC;IAAnB,CAAhB,CAEG,IAFH,CAEQ,UAAS,IAAT,EAAe;AACrB,QAAI,IAAJ,EAAU;AACR,aAAQ,IAAR,EADQ;KAAV,MAEQ;AACN,YAAO,cAAP,EADM;KAFR;IADM,CAFR,CAF2D;GAArB;EAAlB;;AAcd,KAAI,8CAAmB,SAAnB,gBAAmB,CAAC,QAAD,EAAc;;AAE3C,MAAM,QAAQ,SAAS,MAAT,CAF6B;AAG3C,MAAI,SAAS,CAAT,CAHuC;AAI3C,MAAI,iBAAiB,CAAjB,CAJuC;AAK3C,MAAI,UAAU,CAAV,CALuC;AAM3C,MAAI,kBAAkB,CAAlB,CANuC;;AAQ3C,WAAS,OAAT,CAAiB,mBAAW;AAC3B,OAAI,QAAQ,MAAR,KAAmB,WAAnB,EAAgC;;AAEnC,qBAFmC;;AAInC,QAAG,QAAQ,kBAAR,KAA+B,iBAA/B,EAAkD;AACpD,eAAU,QAAQ,kCAAR,GAA2C,CAA3C,CAD0C;KAArD;IAJD;GADgB,CAAjB,CAR2C;;AAoB3C,YAAU,CAAC,iBAAe,KAAf,GAAuB,GAAvB,CAAD,CAA6B,OAA7B,CAAqC,CAArC,CAAV,CApB2C;;AAsB3C,SAAO,EAAC,YAAD,EAAQ,cAAR,EAAgB,gBAAhB,EAAP,CAtB2C;EAAd;;AA0BvB,KAAI,0DAAyB,SAAzB,sBAAyB,CAAC,QAAD,EAAc;;AAEjD,MAAM,WAAW,QAAX,CAF2C;AAGjD,MAAI,YAAY,EAAZ,CAH6C;;AAKjD,WAAS,OAAT,CAAiB,mBAAW;AAC3B,OAAI,OAAC,CAAQ,MAAR,KAAmB,MAAnB,IAA+B,QAAQ,MAAR,KAAmB,WAAnB,EAAiC;AACpE,cAAU,IAAV,CAAe,OAAf,EADoE;IAArE;GADgB,CAAjB,CALiD;;AAWjD,SAAO,SAAP,CAXiD;EAAd,C","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b1b9a846abcc9db8c430\n **/","\nimport * as service from './pothole-service';\n\nservice.findAll()\n\t.then(potholes => {\n\n\t\tpotholes = service.removeDuplicateReports(potholes);\n\n\t\tconsole.log(potholes);\n\n\t\tlet {total, filled, percent, closed_reports} = service.getPercentFilled(potholes);\n\n\t\tdocument.getElementById(\"percent_filled\").innerHTML = `${percent}% Completed, ${filled} total potholes filled.`;\n\n    let html = '';\n\n    potholes.forEach(pothole => html += `<tr><td>${pothole.creation_date}</td><td>${pothole.street_address}, ${pothole.zip}</td><td>${pothole.status}</td><td>${pothole.number_of_potholes_filled_on_block}</td><td>${pothole.most_recent_action}</td></tr>`);\n    document.getElementById(\"potholes\").innerHTML = html;\n\n  })\n  .catch(e => console.log(e));\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/main.js\n **/","\nlet url = \"https://data.cityofchicago.org/resource/7as2-ds3y.json\";\n\nexport let findAll = () => new Promise((resolve, reject) => {\n\n\tfetch(url).then(function(response) {\n\t  return response.json();\n\t}).then(function(json) {\n\t  if (json) {\n\t  \t\tresolve(json);\n\t  \t} else {\n\t  \t\treject(\"No potholes.\");\n\t  \t}\n\t});\n\n});\n\nexport let getPercentFilled = (potholes) => {\n\n\tconst total = potholes.length;\n\tlet filled = 0;\n\tlet closed_reports = 0;\n\tlet percent = 0;\n\tlet number_on_block = 0;\n\n\tpotholes.forEach(pothole => {\n\t\tif (pothole.status === 'Completed') {\n\n\t\t\tclosed_reports++;\n\n\t\t\tif(pothole.most_recent_action === 'Pothole Patched') {\n\t\t\t\tfilled += pothole.number_of_potholes_filled_on_block*1;\n\t\t\t}\n\n\t\t}\n\t});\n\n\tpercent = (closed_reports/total * 100).toFixed(2);\n\n\treturn {total, filled, percent};\n\n}\n\nexport let removeDuplicateReports = (potholes) => {\n\n\tconst original = potholes;\n\tlet cleanData = [];\n\n\toriginal.forEach(pothole => {\n\t\tif ((pothole.status === 'Open') || (pothole.status === 'Completed')) {\n\t\t\tcleanData.push(pothole);\n\t\t}\n\t});\n\n\treturn cleanData;\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/pothole-service.js\n **/"],"sourceRoot":""}